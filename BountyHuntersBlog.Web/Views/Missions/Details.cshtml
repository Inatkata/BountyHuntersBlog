@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@model BountyHuntersBlog.Models.ViewModels.MissionDetailsViewModel

@{
    ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">

            @if (Model != null)
            {
                <h1 class="mb-3">@Model.Title</h1>

                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">
                        Posted by: @Model.Author.DisplayName
                    </span>
                    <span class="text-secondary">
                        @Model.MissionDate.ToShortDateString()
                    </span>
                </div>

                <div class="mb-3">
                    @if (signInManager.IsSignedIn(User))
                    {
                        if (Model.Liked)
                        {
                            <a style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
                            </a>
                        }
                        else
                        {
                            <a id="btnLike" style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up"></i>
                            </a>
                        }
                    }

                    <span id="totalLikes">@Model.TotalLikes</span> likes
                </div>

                <div class="mb-3 d-flex">
                    @foreach (var faction in Model.Factions)
                    {
                        <span class="badge bg-dark me-1">@faction.DisplayName</span>
                    }
                </div>

                <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3" />

                <div class="mb-3 mission-details-content">
                    @Html.Raw(Model.Content)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Mission Comments</h5>

                        @if (signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label">Comment</label>
                                    <input type="text" class="form-control" asp-for="CommentDescription" />
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">Submit</button>
                                    <input type="hidden" asp-for="Id" />
                                    <input type="hidden" asp-for="UrlHandle" />
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @if (Model.Comments != null && Model.Comments.Any())
                        {
                            @foreach (var comment in Model.Comments)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <div>@comment.Description</div>
                                        <div class="d-flex justify-content-between mt-2">
                                            <span class="text-secondary">@comment.User?.DisplayName</span>
                                            <span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">No comments yet.</p>
                        }
                    </div>
                </div>
            }
            else
            {
                <p>Mission not found!</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const btnLikeElement = document.getElementById('btnLike');
        const totalLikeElement = document.getElementById('totalLikes');

        async function getTotalLikes() {
            fetch('/api/MissionLike/@Model.Id/totalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            })
                .then(data => data.json())
                .then(result => totalLikeElement.innerHTML = result);
        }

        async function addLikeForMission() {
            fetch('/api/MissionLike/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({
                    MissionPostId: '@Model.Id',
                    userId: '@userManager.GetUserId(User)'
                })
            }).then(() => {
                btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLikeElement.removeEventListener('click', addLikeForMission);
                getTotalLikes();
            });
        }

        btnLikeElement?.addEventListener('click', addLikeForMission);
    </script>
}
